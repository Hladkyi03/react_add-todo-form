{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","components/TodoAddForm/TodoaddForm.tsx","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","id","username","TodoInfo","userId","todo","usersFromServer","find","cn","completed","title","TodoList","todos","map","TodoAddForm","onAdd","currentLength","useState","setTitle","currentUser","setCurrentUser","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","type","placeholder","value","onChange","target","disabled","App","todosFromServer","currentTodos","setCurrentTodos","currentTasks","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.712b675e.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo:React.FC<Props> = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport cn from 'classnames';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\nfunction findUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = findUser(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n  currentLength: number,\n};\n\nexport const TodoAddForm: React.FC<Props> = ({ onAdd, currentLength }) => {\n  const [title, setTitle] = useState('');\n  const [currentUser, setCurrentUser] = useState('0');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleTitleInput = (value: string) => {\n    setTitle(value);\n    setHasTitleError(false);\n  };\n\n  const handleUserSelect = (value: string) => {\n    setCurrentUser(value);\n    setHasUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setCurrentUser('0');\n  };\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim() && currentUser === '0') {\n      setHasTitleError(true);\n      setHasUserError(true);\n\n      return;\n    }\n\n    if (!title.trim()) {\n      setHasTitleError(true);\n\n      return;\n    }\n\n    if (currentUser === '0') {\n      setHasUserError(true);\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: currentLength + 1,\n      title: title.trim(),\n      completed: false,\n      userId: +currentUser,\n    };\n\n    onAdd(newTodo);\n    resetForm();\n  };\n\n  return (\n    <form\n      action=\"/api/users\"\n      method=\"POST\"\n      onSubmit={handleOnSubmit}\n    >\n      <div className=\"field\">\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => handleTitleInput(event.target.value)}\n          />\n        </label>\n        {hasTitleError && (\n          <span className=\"error\">\n            Please enter a title\n          </span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={currentUser}\n            onChange={(event) => handleUserSelect(event.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n        </label>\n        {hasUserError && (\n          <span className=\"error\">\n            Please choose a user\n          </span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoAddForm } from './components/TodoAddForm';\n\nfunction findMaxId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id));\n}\n\nexport const App = () => {\n  const [currentTodos, setCurrentTodos] = useState(todosFromServer);\n\n  const addTodo = (todo: Todo) => {\n    setCurrentTodos(currentTasks => [...currentTasks, todo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoAddForm onAdd={addTodo} currentLength={findMaxId(currentTodos)} />\n\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}